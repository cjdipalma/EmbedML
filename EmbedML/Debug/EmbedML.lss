
EmbedML.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000006d2  00000766  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800106  00800106  0000076c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000079c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001232  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000acc  00000000  00000000  00001af6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000097a  00000000  00000000  000025c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002fc  00000000  00000000  00002f3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051a  00000000  00000000  00003238  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c4e  00000000  00000000  00003752  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  000043a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ed       	ldi	r30, 0xD2	; 210
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 30       	cpi	r26, 0x0A	; 10
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	9d d0       	rcall	.+314    	; 0x1fe <main>
  c4:	04 c3       	rjmp	.+1544   	; 0x6ce <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <set_si_port>:
			set_sck();
			clr_sck();
		}
	}
	deselect_ram();
}
  c8:	88 23       	and	r24, r24
  ca:	11 f0       	breq	.+4      	; 0xd0 <set_si_port+0x8>
  cc:	41 9a       	sbi	0x08, 1	; 8
  ce:	08 95       	ret
  d0:	41 98       	cbi	0x08, 1	; 8
  d2:	08 95       	ret

000000d4 <select_ram>:
  d4:	40 98       	cbi	0x08, 0	; 8
  d6:	08 95       	ret

000000d8 <deselect_ram>:
  d8:	40 9a       	sbi	0x08, 0	; 8
  da:	08 95       	ret

000000dc <set_sck>:
  dc:	42 9a       	sbi	0x08, 2	; 8
  de:	08 95       	ret

000000e0 <clr_sck>:
  e0:	42 98       	cbi	0x08, 2	; 8
  e2:	08 95       	ret

000000e4 <ram_init>:
  e4:	87 e1       	ldi	r24, 0x17	; 23
  e6:	87 b9       	out	0x07, r24	; 7
  e8:	81 e1       	ldi	r24, 0x11	; 17
  ea:	88 b9       	out	0x08, r24	; 8
  ec:	08 95       	ret

000000ee <ram_write_float>:
  ee:	af 92       	push	r10
  f0:	bf 92       	push	r11
  f2:	cf 92       	push	r12
  f4:	df 92       	push	r13
  f6:	ef 92       	push	r14
  f8:	ff 92       	push	r15
  fa:	0f 93       	push	r16
  fc:	1f 93       	push	r17
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	00 d0       	rcall	.+0      	; 0x104 <ram_write_float+0x16>
 104:	00 d0       	rcall	.+0      	; 0x106 <ram_write_float+0x18>
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
 10a:	f6 2e       	mov	r15, r22
 10c:	29 83       	std	Y+1, r18	; 0x01
 10e:	3a 83       	std	Y+2, r19	; 0x02
 110:	4b 83       	std	Y+3, r20	; 0x03
 112:	5c 83       	std	Y+4, r21	; 0x04
 114:	df df       	rcall	.-66     	; 0xd4 <select_ram>
 116:	07 e0       	ldi	r16, 0x07	; 7
 118:	10 e0       	ldi	r17, 0x00	; 0
 11a:	ee 24       	eor	r14, r14
 11c:	e3 94       	inc	r14
 11e:	d1 2c       	mov	r13, r1
 120:	8e 2d       	mov	r24, r14
 122:	01 30       	cpi	r16, 0x01	; 1
 124:	11 05       	cpc	r17, r1
 126:	09 f0       	breq	.+2      	; 0x12a <ram_write_float+0x3c>
 128:	8d 2d       	mov	r24, r13
 12a:	ce df       	rcall	.-100    	; 0xc8 <set_si_port>
 12c:	d7 df       	rcall	.-82     	; 0xdc <set_sck>
 12e:	d8 df       	rcall	.-80     	; 0xe0 <clr_sck>
 130:	01 50       	subi	r16, 0x01	; 1
 132:	11 09       	sbc	r17, r1
 134:	a8 f7       	brcc	.-22     	; 0x120 <ram_write_float+0x32>
 136:	07 e1       	ldi	r16, 0x17	; 23
 138:	10 e0       	ldi	r17, 0x00	; 0
 13a:	cc 24       	eor	r12, r12
 13c:	c3 94       	inc	r12
 13e:	d1 2c       	mov	r13, r1
 140:	c6 01       	movw	r24, r12
 142:	00 2e       	mov	r0, r16
 144:	02 c0       	rjmp	.+4      	; 0x14a <ram_write_float+0x5c>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <ram_write_float+0x58>
 14e:	8f 21       	and	r24, r15
 150:	bb df       	rcall	.-138    	; 0xc8 <set_si_port>
 152:	c4 df       	rcall	.-120    	; 0xdc <set_sck>
 154:	c5 df       	rcall	.-118    	; 0xe0 <clr_sck>
 156:	01 50       	subi	r16, 0x01	; 1
 158:	11 09       	sbc	r17, r1
 15a:	90 f7       	brcc	.-28     	; 0x140 <ram_write_float+0x52>
 15c:	fe 01       	movw	r30, r28
 15e:	31 96       	adiw	r30, 0x01	; 1
 160:	7f 01       	movw	r14, r30
 162:	5e 01       	movw	r10, r28
 164:	f5 e0       	ldi	r31, 0x05	; 5
 166:	af 0e       	add	r10, r31
 168:	b1 1c       	adc	r11, r1
 16a:	cc 24       	eor	r12, r12
 16c:	c3 94       	inc	r12
 16e:	d1 2c       	mov	r13, r1
 170:	18 c0       	rjmp	.+48     	; 0x1a2 <ram_write_float+0xb4>
 172:	c6 01       	movw	r24, r12
 174:	00 2e       	mov	r0, r16
 176:	02 c0       	rjmp	.+4      	; 0x17c <ram_write_float+0x8e>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	0a 94       	dec	r0
 17e:	e2 f7       	brpl	.-8      	; 0x178 <ram_write_float+0x8a>
 180:	f7 01       	movw	r30, r14
 182:	90 81       	ld	r25, Z
 184:	89 23       	and	r24, r25
 186:	a0 df       	rcall	.-192    	; 0xc8 <set_si_port>
 188:	a9 df       	rcall	.-174    	; 0xdc <set_sck>
 18a:	aa df       	rcall	.-172    	; 0xe0 <clr_sck>
 18c:	0f 5f       	subi	r16, 0xFF	; 255
 18e:	1f 4f       	sbci	r17, 0xFF	; 255
 190:	08 30       	cpi	r16, 0x08	; 8
 192:	11 05       	cpc	r17, r1
 194:	71 f7       	brne	.-36     	; 0x172 <ram_write_float+0x84>
 196:	ff ef       	ldi	r31, 0xFF	; 255
 198:	ef 1a       	sub	r14, r31
 19a:	ff 0a       	sbc	r15, r31
 19c:	ae 14       	cp	r10, r14
 19e:	bf 04       	cpc	r11, r15
 1a0:	19 f0       	breq	.+6      	; 0x1a8 <ram_write_float+0xba>
 1a2:	00 e0       	ldi	r16, 0x00	; 0
 1a4:	10 e0       	ldi	r17, 0x00	; 0
 1a6:	e5 cf       	rjmp	.-54     	; 0x172 <ram_write_float+0x84>
 1a8:	97 df       	rcall	.-210    	; 0xd8 <deselect_ram>
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	1f 91       	pop	r17
 1b8:	0f 91       	pop	r16
 1ba:	ff 90       	pop	r15
 1bc:	ef 90       	pop	r14
 1be:	df 90       	pop	r13
 1c0:	cf 90       	pop	r12
 1c2:	bf 90       	pop	r11
 1c4:	af 90       	pop	r10
 1c6:	08 95       	ret

000001c8 <ram_close>:

void ram_close()
{
	RAM_DDR = 0b00000000;
 1c8:	17 b8       	out	0x07, r1	; 7
 1ca:	08 95       	ret

000001cc <print_bit>:
}
*/

void print_bit(char i, char target)
{
	if (i != 0)		SET_BIT(PORTA, target);
 1cc:	88 23       	and	r24, r24
 1ce:	59 f0       	breq	.+22     	; 0x1e6 <print_bit+0x1a>
 1d0:	22 b1       	in	r18, 0x02	; 2
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <print_bit+0x10>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <print_bit+0xc>
 1e0:	82 2b       	or	r24, r18
 1e2:	82 b9       	out	0x02, r24	; 2
 1e4:	08 95       	ret
	else			CLR_BIT(PORTA, target);
 1e6:	22 b1       	in	r18, 0x02	; 2
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <print_bit+0x26>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <print_bit+0x22>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	82 b9       	out	0x02, r24	; 2
 1fc:	08 95       	ret

000001fe <main>:
#include "helper.h"
#include <stdlib.h>
//#include "mnist-avr.c"

int main(void)
{
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
	// LED-based debugging
	DDRA = 0b00000011;
 20a:	83 e0       	ldi	r24, 0x03	; 3
 20c:	81 b9       	out	0x01, r24	; 1
	//return 0;
	
	// MNIST test
	{
		// Start the RAM
		ram_init();
 20e:	6a df       	rcall	.-300    	; 0xe4 <ram_init>
		//long m = avr_alloc(test_memory_size());

		// Initialize memory space
		//test_initialize();

		float* x = malloc(784 * sizeof(float));
 210:	80 e4       	ldi	r24, 0x40	; 64
 212:	9c e0       	ldi	r25, 0x0C	; 12
 214:	3b d1       	rcall	.+630    	; 0x48c <malloc>
 216:	7c 01       	movw	r14, r24
		for(int i=0; i<784; ++i)
 218:	c0 e0       	ldi	r28, 0x00	; 0
 21a:	d0 e0       	ldi	r29, 0x00	; 0
			x[i] = (i % 256) / 255.0;
 21c:	be 01       	movw	r22, r28
 21e:	70 78       	andi	r23, 0x80	; 128
 220:	77 23       	and	r23, r23
 222:	2c f4       	brge	.+10     	; 0x22e <main+0x30>
 224:	61 50       	subi	r22, 0x01	; 1
 226:	71 09       	sbc	r23, r1
 228:	7f 6f       	ori	r23, 0xFF	; 255
 22a:	6f 5f       	subi	r22, 0xFF	; 255
 22c:	7f 4f       	sbci	r23, 0xFF	; 255
 22e:	07 2e       	mov	r0, r23
 230:	00 0c       	add	r0, r0
 232:	88 0b       	sbc	r24, r24
 234:	99 0b       	sbc	r25, r25
 236:	9e d0       	rcall	.+316    	; 0x374 <__floatsisf>
 238:	20 e0       	ldi	r18, 0x00	; 0
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	4f e7       	ldi	r20, 0x7F	; 127
 23e:	53 e4       	ldi	r21, 0x43	; 67
 240:	2f d0       	rcall	.+94     	; 0x2a0 <__divsf3>
 242:	f7 01       	movw	r30, r14
 244:	61 93       	st	Z+, r22
 246:	71 93       	st	Z+, r23
 248:	81 93       	st	Z+, r24
 24a:	91 93       	st	Z+, r25
 24c:	7f 01       	movw	r14, r30

		// Initialize memory space
		//test_initialize();

		float* x = malloc(784 * sizeof(float));
		for(int i=0; i<784; ++i)
 24e:	21 96       	adiw	r28, 0x01	; 1
 250:	c0 31       	cpi	r28, 0x10	; 16
 252:	f3 e0       	ldi	r31, 0x03	; 3
 254:	df 07       	cpc	r29, r31
 256:	11 f7       	brne	.-60     	; 0x21c <main+0x1e>
 258:	c1 2c       	mov	r12, r1
 25a:	d1 2c       	mov	r13, r1
 25c:	76 01       	movw	r14, r12
		
		//for(unsigned long i=0; i<50000UL; ++i)
		//	ram_read_float(i * 4);
		
		for(unsigned long i=0; i<50000UL; ++i)
			ram_write_float(i * 4, 0.6f);
 25e:	2a e9       	ldi	r18, 0x9A	; 154
 260:	39 e9       	ldi	r19, 0x99	; 153
 262:	49 e1       	ldi	r20, 0x19	; 25
 264:	5f e3       	ldi	r21, 0x3F	; 63
 266:	c7 01       	movw	r24, r14
 268:	b6 01       	movw	r22, r12
 26a:	41 df       	rcall	.-382    	; 0xee <ram_write_float>
 26c:	84 e0       	ldi	r24, 0x04	; 4
 26e:	c8 0e       	add	r12, r24
 270:	d1 1c       	adc	r13, r1
 272:	e1 1c       	adc	r14, r1
 274:	f1 1c       	adc	r15, r1
		//	ram_cpy(i * 10000UL, x, 784 * sizeof (float));
		
		//for(unsigned long i=0; i<50000UL; ++i)
		//	ram_read_float(i * 4);
		
		for(unsigned long i=0; i<50000UL; ++i)
 276:	e0 e4       	ldi	r30, 0x40	; 64
 278:	ce 16       	cp	r12, r30
 27a:	ed e0       	ldi	r30, 0x0D	; 13
 27c:	de 06       	cpc	r13, r30
 27e:	e3 e0       	ldi	r30, 0x03	; 3
 280:	ee 06       	cpc	r14, r30
		free(train_y);
		free(train_x);
		free(test_y);
		free(test_x);
		*/
		ram_close();
 282:	f1 04       	cpc	r15, r1
 284:	61 f7       	brne	.-40     	; 0x25e <main+0x60>
	//volatile int i, j;
	//for(i=0; i<10; ++i)
	//{
	//	for(j=0; j<0x186A0UL; ++j) {}
	//}
	print_bit(1, 0);
 286:	a0 df       	rcall	.-192    	; 0x1c8 <ram_close>
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	9f df       	rcall	.-194    	; 0x1cc <print_bit>
		avr_wait(AVR_WAIT_TIME);
	}
	
	ram_close();
	//*/
}
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	ff 90       	pop	r15
 298:	ef 90       	pop	r14
 29a:	df 90       	pop	r13
 29c:	cf 90       	pop	r12
 29e:	08 95       	ret

000002a0 <__divsf3>:
 2a0:	0c d0       	rcall	.+24     	; 0x2ba <__divsf3x>
 2a2:	ba c0       	rjmp	.+372    	; 0x418 <__fp_round>
 2a4:	b2 d0       	rcall	.+356    	; 0x40a <__fp_pscB>
 2a6:	40 f0       	brcs	.+16     	; 0x2b8 <__divsf3+0x18>
 2a8:	a9 d0       	rcall	.+338    	; 0x3fc <__fp_pscA>
 2aa:	30 f0       	brcs	.+12     	; 0x2b8 <__divsf3+0x18>
 2ac:	21 f4       	brne	.+8      	; 0x2b6 <__divsf3+0x16>
 2ae:	5f 3f       	cpi	r21, 0xFF	; 255
 2b0:	19 f0       	breq	.+6      	; 0x2b8 <__divsf3+0x18>
 2b2:	9b c0       	rjmp	.+310    	; 0x3ea <__fp_inf>
 2b4:	51 11       	cpse	r21, r1
 2b6:	e4 c0       	rjmp	.+456    	; 0x480 <__fp_szero>
 2b8:	9e c0       	rjmp	.+316    	; 0x3f6 <__fp_nan>

000002ba <__divsf3x>:
 2ba:	bf d0       	rcall	.+382    	; 0x43a <__fp_split3>
 2bc:	98 f3       	brcs	.-26     	; 0x2a4 <__divsf3+0x4>

000002be <__divsf3_pse>:
 2be:	99 23       	and	r25, r25
 2c0:	c9 f3       	breq	.-14     	; 0x2b4 <__divsf3+0x14>
 2c2:	55 23       	and	r21, r21
 2c4:	b1 f3       	breq	.-20     	; 0x2b2 <__divsf3+0x12>
 2c6:	95 1b       	sub	r25, r21
 2c8:	55 0b       	sbc	r21, r21
 2ca:	bb 27       	eor	r27, r27
 2cc:	aa 27       	eor	r26, r26
 2ce:	62 17       	cp	r22, r18
 2d0:	73 07       	cpc	r23, r19
 2d2:	84 07       	cpc	r24, r20
 2d4:	38 f0       	brcs	.+14     	; 0x2e4 <__divsf3_pse+0x26>
 2d6:	9f 5f       	subi	r25, 0xFF	; 255
 2d8:	5f 4f       	sbci	r21, 0xFF	; 255
 2da:	22 0f       	add	r18, r18
 2dc:	33 1f       	adc	r19, r19
 2de:	44 1f       	adc	r20, r20
 2e0:	aa 1f       	adc	r26, r26
 2e2:	a9 f3       	breq	.-22     	; 0x2ce <__divsf3_pse+0x10>
 2e4:	33 d0       	rcall	.+102    	; 0x34c <__divsf3_pse+0x8e>
 2e6:	0e 2e       	mov	r0, r30
 2e8:	3a f0       	brmi	.+14     	; 0x2f8 <__divsf3_pse+0x3a>
 2ea:	e0 e8       	ldi	r30, 0x80	; 128
 2ec:	30 d0       	rcall	.+96     	; 0x34e <__divsf3_pse+0x90>
 2ee:	91 50       	subi	r25, 0x01	; 1
 2f0:	50 40       	sbci	r21, 0x00	; 0
 2f2:	e6 95       	lsr	r30
 2f4:	00 1c       	adc	r0, r0
 2f6:	ca f7       	brpl	.-14     	; 0x2ea <__divsf3_pse+0x2c>
 2f8:	29 d0       	rcall	.+82     	; 0x34c <__divsf3_pse+0x8e>
 2fa:	fe 2f       	mov	r31, r30
 2fc:	27 d0       	rcall	.+78     	; 0x34c <__divsf3_pse+0x8e>
 2fe:	66 0f       	add	r22, r22
 300:	77 1f       	adc	r23, r23
 302:	88 1f       	adc	r24, r24
 304:	bb 1f       	adc	r27, r27
 306:	26 17       	cp	r18, r22
 308:	37 07       	cpc	r19, r23
 30a:	48 07       	cpc	r20, r24
 30c:	ab 07       	cpc	r26, r27
 30e:	b0 e8       	ldi	r27, 0x80	; 128
 310:	09 f0       	breq	.+2      	; 0x314 <__divsf3_pse+0x56>
 312:	bb 0b       	sbc	r27, r27
 314:	80 2d       	mov	r24, r0
 316:	bf 01       	movw	r22, r30
 318:	ff 27       	eor	r31, r31
 31a:	93 58       	subi	r25, 0x83	; 131
 31c:	5f 4f       	sbci	r21, 0xFF	; 255
 31e:	2a f0       	brmi	.+10     	; 0x32a <__divsf3_pse+0x6c>
 320:	9e 3f       	cpi	r25, 0xFE	; 254
 322:	51 05       	cpc	r21, r1
 324:	68 f0       	brcs	.+26     	; 0x340 <__divsf3_pse+0x82>
 326:	61 c0       	rjmp	.+194    	; 0x3ea <__fp_inf>
 328:	ab c0       	rjmp	.+342    	; 0x480 <__fp_szero>
 32a:	5f 3f       	cpi	r21, 0xFF	; 255
 32c:	ec f3       	brlt	.-6      	; 0x328 <__divsf3_pse+0x6a>
 32e:	98 3e       	cpi	r25, 0xE8	; 232
 330:	dc f3       	brlt	.-10     	; 0x328 <__divsf3_pse+0x6a>
 332:	86 95       	lsr	r24
 334:	77 95       	ror	r23
 336:	67 95       	ror	r22
 338:	b7 95       	ror	r27
 33a:	f7 95       	ror	r31
 33c:	9f 5f       	subi	r25, 0xFF	; 255
 33e:	c9 f7       	brne	.-14     	; 0x332 <__divsf3_pse+0x74>
 340:	88 0f       	add	r24, r24
 342:	91 1d       	adc	r25, r1
 344:	96 95       	lsr	r25
 346:	87 95       	ror	r24
 348:	97 f9       	bld	r25, 7
 34a:	08 95       	ret
 34c:	e1 e0       	ldi	r30, 0x01	; 1
 34e:	66 0f       	add	r22, r22
 350:	77 1f       	adc	r23, r23
 352:	88 1f       	adc	r24, r24
 354:	bb 1f       	adc	r27, r27
 356:	62 17       	cp	r22, r18
 358:	73 07       	cpc	r23, r19
 35a:	84 07       	cpc	r24, r20
 35c:	ba 07       	cpc	r27, r26
 35e:	20 f0       	brcs	.+8      	; 0x368 <__divsf3_pse+0xaa>
 360:	62 1b       	sub	r22, r18
 362:	73 0b       	sbc	r23, r19
 364:	84 0b       	sbc	r24, r20
 366:	ba 0b       	sbc	r27, r26
 368:	ee 1f       	adc	r30, r30
 36a:	88 f7       	brcc	.-30     	; 0x34e <__divsf3_pse+0x90>
 36c:	e0 95       	com	r30
 36e:	08 95       	ret

00000370 <__floatunsisf>:
 370:	e8 94       	clt
 372:	09 c0       	rjmp	.+18     	; 0x386 <__floatsisf+0x12>

00000374 <__floatsisf>:
 374:	97 fb       	bst	r25, 7
 376:	3e f4       	brtc	.+14     	; 0x386 <__floatsisf+0x12>
 378:	90 95       	com	r25
 37a:	80 95       	com	r24
 37c:	70 95       	com	r23
 37e:	61 95       	neg	r22
 380:	7f 4f       	sbci	r23, 0xFF	; 255
 382:	8f 4f       	sbci	r24, 0xFF	; 255
 384:	9f 4f       	sbci	r25, 0xFF	; 255
 386:	99 23       	and	r25, r25
 388:	a9 f0       	breq	.+42     	; 0x3b4 <__floatsisf+0x40>
 38a:	f9 2f       	mov	r31, r25
 38c:	96 e9       	ldi	r25, 0x96	; 150
 38e:	bb 27       	eor	r27, r27
 390:	93 95       	inc	r25
 392:	f6 95       	lsr	r31
 394:	87 95       	ror	r24
 396:	77 95       	ror	r23
 398:	67 95       	ror	r22
 39a:	b7 95       	ror	r27
 39c:	f1 11       	cpse	r31, r1
 39e:	f8 cf       	rjmp	.-16     	; 0x390 <__floatsisf+0x1c>
 3a0:	fa f4       	brpl	.+62     	; 0x3e0 <__floatsisf+0x6c>
 3a2:	bb 0f       	add	r27, r27
 3a4:	11 f4       	brne	.+4      	; 0x3aa <__floatsisf+0x36>
 3a6:	60 ff       	sbrs	r22, 0
 3a8:	1b c0       	rjmp	.+54     	; 0x3e0 <__floatsisf+0x6c>
 3aa:	6f 5f       	subi	r22, 0xFF	; 255
 3ac:	7f 4f       	sbci	r23, 0xFF	; 255
 3ae:	8f 4f       	sbci	r24, 0xFF	; 255
 3b0:	9f 4f       	sbci	r25, 0xFF	; 255
 3b2:	16 c0       	rjmp	.+44     	; 0x3e0 <__floatsisf+0x6c>
 3b4:	88 23       	and	r24, r24
 3b6:	11 f0       	breq	.+4      	; 0x3bc <__floatsisf+0x48>
 3b8:	96 e9       	ldi	r25, 0x96	; 150
 3ba:	11 c0       	rjmp	.+34     	; 0x3de <__floatsisf+0x6a>
 3bc:	77 23       	and	r23, r23
 3be:	21 f0       	breq	.+8      	; 0x3c8 <__floatsisf+0x54>
 3c0:	9e e8       	ldi	r25, 0x8E	; 142
 3c2:	87 2f       	mov	r24, r23
 3c4:	76 2f       	mov	r23, r22
 3c6:	05 c0       	rjmp	.+10     	; 0x3d2 <__floatsisf+0x5e>
 3c8:	66 23       	and	r22, r22
 3ca:	71 f0       	breq	.+28     	; 0x3e8 <__floatsisf+0x74>
 3cc:	96 e8       	ldi	r25, 0x86	; 134
 3ce:	86 2f       	mov	r24, r22
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	60 e0       	ldi	r22, 0x00	; 0
 3d4:	2a f0       	brmi	.+10     	; 0x3e0 <__floatsisf+0x6c>
 3d6:	9a 95       	dec	r25
 3d8:	66 0f       	add	r22, r22
 3da:	77 1f       	adc	r23, r23
 3dc:	88 1f       	adc	r24, r24
 3de:	da f7       	brpl	.-10     	; 0x3d6 <__floatsisf+0x62>
 3e0:	88 0f       	add	r24, r24
 3e2:	96 95       	lsr	r25
 3e4:	87 95       	ror	r24
 3e6:	97 f9       	bld	r25, 7
 3e8:	08 95       	ret

000003ea <__fp_inf>:
 3ea:	97 f9       	bld	r25, 7
 3ec:	9f 67       	ori	r25, 0x7F	; 127
 3ee:	80 e8       	ldi	r24, 0x80	; 128
 3f0:	70 e0       	ldi	r23, 0x00	; 0
 3f2:	60 e0       	ldi	r22, 0x00	; 0
 3f4:	08 95       	ret

000003f6 <__fp_nan>:
 3f6:	9f ef       	ldi	r25, 0xFF	; 255
 3f8:	80 ec       	ldi	r24, 0xC0	; 192
 3fa:	08 95       	ret

000003fc <__fp_pscA>:
 3fc:	00 24       	eor	r0, r0
 3fe:	0a 94       	dec	r0
 400:	16 16       	cp	r1, r22
 402:	17 06       	cpc	r1, r23
 404:	18 06       	cpc	r1, r24
 406:	09 06       	cpc	r0, r25
 408:	08 95       	ret

0000040a <__fp_pscB>:
 40a:	00 24       	eor	r0, r0
 40c:	0a 94       	dec	r0
 40e:	12 16       	cp	r1, r18
 410:	13 06       	cpc	r1, r19
 412:	14 06       	cpc	r1, r20
 414:	05 06       	cpc	r0, r21
 416:	08 95       	ret

00000418 <__fp_round>:
 418:	09 2e       	mov	r0, r25
 41a:	03 94       	inc	r0
 41c:	00 0c       	add	r0, r0
 41e:	11 f4       	brne	.+4      	; 0x424 <__fp_round+0xc>
 420:	88 23       	and	r24, r24
 422:	52 f0       	brmi	.+20     	; 0x438 <__fp_round+0x20>
 424:	bb 0f       	add	r27, r27
 426:	40 f4       	brcc	.+16     	; 0x438 <__fp_round+0x20>
 428:	bf 2b       	or	r27, r31
 42a:	11 f4       	brne	.+4      	; 0x430 <__fp_round+0x18>
 42c:	60 ff       	sbrs	r22, 0
 42e:	04 c0       	rjmp	.+8      	; 0x438 <__fp_round+0x20>
 430:	6f 5f       	subi	r22, 0xFF	; 255
 432:	7f 4f       	sbci	r23, 0xFF	; 255
 434:	8f 4f       	sbci	r24, 0xFF	; 255
 436:	9f 4f       	sbci	r25, 0xFF	; 255
 438:	08 95       	ret

0000043a <__fp_split3>:
 43a:	57 fd       	sbrc	r21, 7
 43c:	90 58       	subi	r25, 0x80	; 128
 43e:	44 0f       	add	r20, r20
 440:	55 1f       	adc	r21, r21
 442:	59 f0       	breq	.+22     	; 0x45a <__fp_splitA+0x10>
 444:	5f 3f       	cpi	r21, 0xFF	; 255
 446:	71 f0       	breq	.+28     	; 0x464 <__fp_splitA+0x1a>
 448:	47 95       	ror	r20

0000044a <__fp_splitA>:
 44a:	88 0f       	add	r24, r24
 44c:	97 fb       	bst	r25, 7
 44e:	99 1f       	adc	r25, r25
 450:	61 f0       	breq	.+24     	; 0x46a <__fp_splitA+0x20>
 452:	9f 3f       	cpi	r25, 0xFF	; 255
 454:	79 f0       	breq	.+30     	; 0x474 <__fp_splitA+0x2a>
 456:	87 95       	ror	r24
 458:	08 95       	ret
 45a:	12 16       	cp	r1, r18
 45c:	13 06       	cpc	r1, r19
 45e:	14 06       	cpc	r1, r20
 460:	55 1f       	adc	r21, r21
 462:	f2 cf       	rjmp	.-28     	; 0x448 <__fp_split3+0xe>
 464:	46 95       	lsr	r20
 466:	f1 df       	rcall	.-30     	; 0x44a <__fp_splitA>
 468:	08 c0       	rjmp	.+16     	; 0x47a <__fp_splitA+0x30>
 46a:	16 16       	cp	r1, r22
 46c:	17 06       	cpc	r1, r23
 46e:	18 06       	cpc	r1, r24
 470:	99 1f       	adc	r25, r25
 472:	f1 cf       	rjmp	.-30     	; 0x456 <__fp_splitA+0xc>
 474:	86 95       	lsr	r24
 476:	71 05       	cpc	r23, r1
 478:	61 05       	cpc	r22, r1
 47a:	08 94       	sec
 47c:	08 95       	ret

0000047e <__fp_zero>:
 47e:	e8 94       	clt

00000480 <__fp_szero>:
 480:	bb 27       	eor	r27, r27
 482:	66 27       	eor	r22, r22
 484:	77 27       	eor	r23, r23
 486:	cb 01       	movw	r24, r22
 488:	97 f9       	bld	r25, 7
 48a:	08 95       	ret

0000048c <malloc>:
 48c:	0f 93       	push	r16
 48e:	1f 93       	push	r17
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	82 30       	cpi	r24, 0x02	; 2
 496:	91 05       	cpc	r25, r1
 498:	10 f4       	brcc	.+4      	; 0x49e <malloc+0x12>
 49a:	82 e0       	ldi	r24, 0x02	; 2
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__flp>
 4a2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__flp+0x1>
 4a6:	20 e0       	ldi	r18, 0x00	; 0
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	a0 e0       	ldi	r26, 0x00	; 0
 4ac:	b0 e0       	ldi	r27, 0x00	; 0
 4ae:	30 97       	sbiw	r30, 0x00	; 0
 4b0:	19 f1       	breq	.+70     	; 0x4f8 <malloc+0x6c>
 4b2:	40 81       	ld	r20, Z
 4b4:	51 81       	ldd	r21, Z+1	; 0x01
 4b6:	02 81       	ldd	r16, Z+2	; 0x02
 4b8:	13 81       	ldd	r17, Z+3	; 0x03
 4ba:	48 17       	cp	r20, r24
 4bc:	59 07       	cpc	r21, r25
 4be:	c8 f0       	brcs	.+50     	; 0x4f2 <malloc+0x66>
 4c0:	84 17       	cp	r24, r20
 4c2:	95 07       	cpc	r25, r21
 4c4:	69 f4       	brne	.+26     	; 0x4e0 <malloc+0x54>
 4c6:	10 97       	sbiw	r26, 0x00	; 0
 4c8:	31 f0       	breq	.+12     	; 0x4d6 <malloc+0x4a>
 4ca:	12 96       	adiw	r26, 0x02	; 2
 4cc:	0c 93       	st	X, r16
 4ce:	12 97       	sbiw	r26, 0x02	; 2
 4d0:	13 96       	adiw	r26, 0x03	; 3
 4d2:	1c 93       	st	X, r17
 4d4:	27 c0       	rjmp	.+78     	; 0x524 <malloc+0x98>
 4d6:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__flp>
 4da:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__flp+0x1>
 4de:	22 c0       	rjmp	.+68     	; 0x524 <malloc+0x98>
 4e0:	21 15       	cp	r18, r1
 4e2:	31 05       	cpc	r19, r1
 4e4:	19 f0       	breq	.+6      	; 0x4ec <malloc+0x60>
 4e6:	42 17       	cp	r20, r18
 4e8:	53 07       	cpc	r21, r19
 4ea:	18 f4       	brcc	.+6      	; 0x4f2 <malloc+0x66>
 4ec:	9a 01       	movw	r18, r20
 4ee:	bd 01       	movw	r22, r26
 4f0:	ef 01       	movw	r28, r30
 4f2:	df 01       	movw	r26, r30
 4f4:	f8 01       	movw	r30, r16
 4f6:	db cf       	rjmp	.-74     	; 0x4ae <malloc+0x22>
 4f8:	21 15       	cp	r18, r1
 4fa:	31 05       	cpc	r19, r1
 4fc:	f9 f0       	breq	.+62     	; 0x53c <malloc+0xb0>
 4fe:	28 1b       	sub	r18, r24
 500:	39 0b       	sbc	r19, r25
 502:	24 30       	cpi	r18, 0x04	; 4
 504:	31 05       	cpc	r19, r1
 506:	80 f4       	brcc	.+32     	; 0x528 <malloc+0x9c>
 508:	8a 81       	ldd	r24, Y+2	; 0x02
 50a:	9b 81       	ldd	r25, Y+3	; 0x03
 50c:	61 15       	cp	r22, r1
 50e:	71 05       	cpc	r23, r1
 510:	21 f0       	breq	.+8      	; 0x51a <malloc+0x8e>
 512:	fb 01       	movw	r30, r22
 514:	93 83       	std	Z+3, r25	; 0x03
 516:	82 83       	std	Z+2, r24	; 0x02
 518:	04 c0       	rjmp	.+8      	; 0x522 <malloc+0x96>
 51a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__flp+0x1>
 51e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__flp>
 522:	fe 01       	movw	r30, r28
 524:	32 96       	adiw	r30, 0x02	; 2
 526:	44 c0       	rjmp	.+136    	; 0x5b0 <malloc+0x124>
 528:	fe 01       	movw	r30, r28
 52a:	e2 0f       	add	r30, r18
 52c:	f3 1f       	adc	r31, r19
 52e:	81 93       	st	Z+, r24
 530:	91 93       	st	Z+, r25
 532:	22 50       	subi	r18, 0x02	; 2
 534:	31 09       	sbc	r19, r1
 536:	39 83       	std	Y+1, r19	; 0x01
 538:	28 83       	st	Y, r18
 53a:	3a c0       	rjmp	.+116    	; 0x5b0 <malloc+0x124>
 53c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 540:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 544:	23 2b       	or	r18, r19
 546:	41 f4       	brne	.+16     	; 0x558 <malloc+0xcc>
 548:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 54c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 550:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__data_end+0x1>
 554:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__data_end>
 558:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 55c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 560:	21 15       	cp	r18, r1
 562:	31 05       	cpc	r19, r1
 564:	41 f4       	brne	.+16     	; 0x576 <malloc+0xea>
 566:	2d b7       	in	r18, 0x3d	; 61
 568:	3e b7       	in	r19, 0x3e	; 62
 56a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 56e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 572:	24 1b       	sub	r18, r20
 574:	35 0b       	sbc	r19, r21
 576:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 57a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 57e:	e2 17       	cp	r30, r18
 580:	f3 07       	cpc	r31, r19
 582:	a0 f4       	brcc	.+40     	; 0x5ac <malloc+0x120>
 584:	2e 1b       	sub	r18, r30
 586:	3f 0b       	sbc	r19, r31
 588:	28 17       	cp	r18, r24
 58a:	39 07       	cpc	r19, r25
 58c:	78 f0       	brcs	.+30     	; 0x5ac <malloc+0x120>
 58e:	ac 01       	movw	r20, r24
 590:	4e 5f       	subi	r20, 0xFE	; 254
 592:	5f 4f       	sbci	r21, 0xFF	; 255
 594:	24 17       	cp	r18, r20
 596:	35 07       	cpc	r19, r21
 598:	48 f0       	brcs	.+18     	; 0x5ac <malloc+0x120>
 59a:	4e 0f       	add	r20, r30
 59c:	5f 1f       	adc	r21, r31
 59e:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <__data_end+0x1>
 5a2:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <__data_end>
 5a6:	81 93       	st	Z+, r24
 5a8:	91 93       	st	Z+, r25
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <malloc+0x124>
 5ac:	e0 e0       	ldi	r30, 0x00	; 0
 5ae:	f0 e0       	ldi	r31, 0x00	; 0
 5b0:	cf 01       	movw	r24, r30
 5b2:	df 91       	pop	r29
 5b4:	cf 91       	pop	r28
 5b6:	1f 91       	pop	r17
 5b8:	0f 91       	pop	r16
 5ba:	08 95       	ret

000005bc <free>:
 5bc:	cf 93       	push	r28
 5be:	df 93       	push	r29
 5c0:	00 97       	sbiw	r24, 0x00	; 0
 5c2:	09 f4       	brne	.+2      	; 0x5c6 <free+0xa>
 5c4:	81 c0       	rjmp	.+258    	; 0x6c8 <free+0x10c>
 5c6:	fc 01       	movw	r30, r24
 5c8:	32 97       	sbiw	r30, 0x02	; 2
 5ca:	13 82       	std	Z+3, r1	; 0x03
 5cc:	12 82       	std	Z+2, r1	; 0x02
 5ce:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__flp>
 5d2:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__flp+0x1>
 5d6:	10 97       	sbiw	r26, 0x00	; 0
 5d8:	81 f4       	brne	.+32     	; 0x5fa <free+0x3e>
 5da:	20 81       	ld	r18, Z
 5dc:	31 81       	ldd	r19, Z+1	; 0x01
 5de:	82 0f       	add	r24, r18
 5e0:	93 1f       	adc	r25, r19
 5e2:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 5e6:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 5ea:	28 17       	cp	r18, r24
 5ec:	39 07       	cpc	r19, r25
 5ee:	51 f5       	brne	.+84     	; 0x644 <free+0x88>
 5f0:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 5f4:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 5f8:	67 c0       	rjmp	.+206    	; 0x6c8 <free+0x10c>
 5fa:	ed 01       	movw	r28, r26
 5fc:	20 e0       	ldi	r18, 0x00	; 0
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	ce 17       	cp	r28, r30
 602:	df 07       	cpc	r29, r31
 604:	40 f4       	brcc	.+16     	; 0x616 <free+0x5a>
 606:	4a 81       	ldd	r20, Y+2	; 0x02
 608:	5b 81       	ldd	r21, Y+3	; 0x03
 60a:	9e 01       	movw	r18, r28
 60c:	41 15       	cp	r20, r1
 60e:	51 05       	cpc	r21, r1
 610:	f1 f0       	breq	.+60     	; 0x64e <free+0x92>
 612:	ea 01       	movw	r28, r20
 614:	f5 cf       	rjmp	.-22     	; 0x600 <free+0x44>
 616:	d3 83       	std	Z+3, r29	; 0x03
 618:	c2 83       	std	Z+2, r28	; 0x02
 61a:	40 81       	ld	r20, Z
 61c:	51 81       	ldd	r21, Z+1	; 0x01
 61e:	84 0f       	add	r24, r20
 620:	95 1f       	adc	r25, r21
 622:	c8 17       	cp	r28, r24
 624:	d9 07       	cpc	r29, r25
 626:	59 f4       	brne	.+22     	; 0x63e <free+0x82>
 628:	88 81       	ld	r24, Y
 62a:	99 81       	ldd	r25, Y+1	; 0x01
 62c:	84 0f       	add	r24, r20
 62e:	95 1f       	adc	r25, r21
 630:	02 96       	adiw	r24, 0x02	; 2
 632:	91 83       	std	Z+1, r25	; 0x01
 634:	80 83       	st	Z, r24
 636:	8a 81       	ldd	r24, Y+2	; 0x02
 638:	9b 81       	ldd	r25, Y+3	; 0x03
 63a:	93 83       	std	Z+3, r25	; 0x03
 63c:	82 83       	std	Z+2, r24	; 0x02
 63e:	21 15       	cp	r18, r1
 640:	31 05       	cpc	r19, r1
 642:	29 f4       	brne	.+10     	; 0x64e <free+0x92>
 644:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__flp+0x1>
 648:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__flp>
 64c:	3d c0       	rjmp	.+122    	; 0x6c8 <free+0x10c>
 64e:	e9 01       	movw	r28, r18
 650:	fb 83       	std	Y+3, r31	; 0x03
 652:	ea 83       	std	Y+2, r30	; 0x02
 654:	49 91       	ld	r20, Y+
 656:	59 91       	ld	r21, Y+
 658:	c4 0f       	add	r28, r20
 65a:	d5 1f       	adc	r29, r21
 65c:	ec 17       	cp	r30, r28
 65e:	fd 07       	cpc	r31, r29
 660:	61 f4       	brne	.+24     	; 0x67a <free+0xbe>
 662:	80 81       	ld	r24, Z
 664:	91 81       	ldd	r25, Z+1	; 0x01
 666:	84 0f       	add	r24, r20
 668:	95 1f       	adc	r25, r21
 66a:	02 96       	adiw	r24, 0x02	; 2
 66c:	e9 01       	movw	r28, r18
 66e:	99 83       	std	Y+1, r25	; 0x01
 670:	88 83       	st	Y, r24
 672:	82 81       	ldd	r24, Z+2	; 0x02
 674:	93 81       	ldd	r25, Z+3	; 0x03
 676:	9b 83       	std	Y+3, r25	; 0x03
 678:	8a 83       	std	Y+2, r24	; 0x02
 67a:	e0 e0       	ldi	r30, 0x00	; 0
 67c:	f0 e0       	ldi	r31, 0x00	; 0
 67e:	12 96       	adiw	r26, 0x02	; 2
 680:	8d 91       	ld	r24, X+
 682:	9c 91       	ld	r25, X
 684:	13 97       	sbiw	r26, 0x03	; 3
 686:	00 97       	sbiw	r24, 0x00	; 0
 688:	19 f0       	breq	.+6      	; 0x690 <free+0xd4>
 68a:	fd 01       	movw	r30, r26
 68c:	dc 01       	movw	r26, r24
 68e:	f7 cf       	rjmp	.-18     	; 0x67e <free+0xc2>
 690:	8d 91       	ld	r24, X+
 692:	9c 91       	ld	r25, X
 694:	11 97       	sbiw	r26, 0x01	; 1
 696:	9d 01       	movw	r18, r26
 698:	2e 5f       	subi	r18, 0xFE	; 254
 69a:	3f 4f       	sbci	r19, 0xFF	; 255
 69c:	82 0f       	add	r24, r18
 69e:	93 1f       	adc	r25, r19
 6a0:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 6a4:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 6a8:	28 17       	cp	r18, r24
 6aa:	39 07       	cpc	r19, r25
 6ac:	69 f4       	brne	.+26     	; 0x6c8 <free+0x10c>
 6ae:	30 97       	sbiw	r30, 0x00	; 0
 6b0:	29 f4       	brne	.+10     	; 0x6bc <free+0x100>
 6b2:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__flp+0x1>
 6b6:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__flp>
 6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <free+0x104>
 6bc:	13 82       	std	Z+3, r1	; 0x03
 6be:	12 82       	std	Z+2, r1	; 0x02
 6c0:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x1>
 6c4:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end>
 6c8:	df 91       	pop	r29
 6ca:	cf 91       	pop	r28
 6cc:	08 95       	ret

000006ce <_exit>:
 6ce:	f8 94       	cli

000006d0 <__stop_program>:
 6d0:	ff cf       	rjmp	.-2      	; 0x6d0 <__stop_program>
